; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--split_sections --debug -c -S -o.\objects\main.s --depend=.\objects\main.d --cpu=Cortex-M0 --apcs=interwork --diag_suppress=9931 -I..\..\..\..\3_Device\CMSIS\KEIL_CORE -I..\..\..\..\3_Device\MM32F032xx_s\HAL_lib\inc -I..\..\..\..\3_Device\MM32F032xx_s\Include -I..\Peripheral\inc -I..\BSP\inc -I..\APP\inc -I..\APP\rf_source\rf_include -I.\RTE\_Rafael_BLE_MM32F032xx_s -IC:\Keil_v5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=530 -D_RTE_ --omf_browse=.\objects\main.crf ..\APP\main.c]
        THUMB
        REQUIRE8
        PRESERVE8

        AREA ||i.BleApp_Main||, CODE, READONLY, ALIGN=2

BleApp_Main PROC
        PUSH     {r4-r6,lr}
        LDR      r4,|L0.112|
        MOVS     r2,#0xf
        LDR      r1,|L0.108|
        ADDS     r0,r4,#2
        BL       Knl_CodeCpy
        MOVS     r0,#6
        STRB     r0,[r4,#6]
        LDRH     r0,[r4,#2]  ; LL_Adv_Para
        LDR      r5,|L0.116|
        LSLS     r1,r0,#2
        ADDS     r0,r0,r1
        STRH     r0,[r4,#2]
        MOVS     r0,#1
        STRB     r0,[r5,#0]
        MOVS     r0,#2
        STRB     r0,[r5,#1]
        MOVS     r0,#3
        STRB     r0,[r5,#2]
        MOVS     r6,#0
        MOVS     r0,#0x12
        STRB     r6,[r5,#3]
        LDR      r1,|L0.108|
        STRB     r0,[r4,#0x11]
        MOV      r2,r0
        ADDS     r1,r1,#0x14
        ADDS     r0,r4,r0
        BL       Knl_CodeCpy
        MOVS     r1,#0xe
        MOV      r0,r4
        ADDS     r0,r0,#0x20
        STRB     r1,[r0,#0x11]
        MOV      r2,r1
        LDR      r1,|L0.108|
        ADDS     r0,r0,#0x12
        ADDS     r1,r1,#0x25
        BL       Knl_CodeCpy
        CPSID    i
        LDR      r0,|L0.120|
        MOVS     r2,#0x80
        LDRB     r1,[r0,#0]  ; LL_Msg_AdvScnConn
        ORRS     r1,r1,r2
        STRB     r1,[r0,#0]
        LDRB     r0,[r5,#0]  ; Ch_ADV_Ch_Hop_Table
        STRB     r0,[r4,#0]
        STRH     r6,[r4,#4]
        MOVS     r0,#4
        STRB     r0,[r4,#1]
        CPSIE    i
        POP      {r4-r6,pc}
        ENDP

        DCW      0x0000
|L0.108|
        DCD      ||.data||+0x4
|L0.112|
        DCD      LL_Adv_Para
|L0.116|
        DCD      Ch_ADV_Ch_Hop_Table
|L0.120|
        DCD      LL_Msg_AdvScnConn

        AREA ||i.RF_Open||, CODE, READONLY, ALIGN=2

RF_Open PROC
        PUSH     {r3-r5,lr}
        MOVS     r0,#0x19
        BL       SysTick_DelayMs
        MOVS     r1,#1
        LSLS     r0,r1,#18
        BL       RCC_AHBPeriphClockCmd
        MOV      r0,sp
        BL       GPIO_StructInit
        MOVS     r4,#1
        LSLS     r4,r4,#9
        MOV      r1,sp
        STRH     r4,[r1,#0]
        MOVS     r0,#1
        STRB     r0,[r1,#2]
        MOVS     r0,#0x10
        LDR      r5,|L1.100|
        STRB     r0,[r1,#3]
        MOV      r0,r5
        BL       GPIO_Init
        MOV      r1,r4
        MOV      r0,r5
        BL       GPIO_SetBits
        MOVS     r0,#1
        BL       SysTick_DelayMs
        MOV      r1,r4
        MOV      r0,r5
        BL       GPIO_ResetBits
        MOVS     r0,#1
        BL       SysTick_DelayMs
        MOV      r1,r4
        MOV      r0,r5
        BL       GPIO_SetBits
        MOVS     r0,#0x32
        BL       SysTick_DelayMs
        BL       RF_SpiIoMapping
        BL       RF_Init
        POP      {r3-r5,pc}
        ENDP

        DCW      0x0000
|L1.100|
        DCD      0x48000400

        AREA ||i.RF_SpiIoMapping||, CODE, READONLY, ALIGN=2

RF_SpiIoMapping PROC
        PUSH     {r3-r7,lr}
        BL       SPI_GPIO_Init
        MOVS     r5,#1
        LDR      r4,|L2.152|
        LSLS     r5,r5,#12
        LDRH     r0,[r4,#0xc]
        LSLS     r6,r5,#1
        ORRS     r0,r0,r5
        BICS     r0,r0,r6
        LSLS     r0,r0,#17
        LSRS     r0,r0,#17
        LSLS     r7,r5,#2
        BICS     r0,r0,r7
        ASRS     r1,r5,#4
        BICS     r0,r0,r1
        STRH     r0,[r4,#0xc]
        MOVS     r0,#0x19
        BL       delay_us
        MOVS     r1,#0x88
        MOVS     r0,#0xf8
        BL       spiGpioWriteReg
        MOVS     r0,#0x19
        BL       delay_us
        MOVS     r1,#0x46
        MOVS     r0,#0xf9
        BL       spiGpioWriteReg
        MOVS     r0,#0x19
        BL       delay_us
        BL       SPI_GPIO_Init
        LDRH     r0,[r4,#0xc]
        LSLS     r1,r4,#5
        ORRS     r0,r0,r5
        ORRS     r0,r0,r6
        ORRS     r0,r0,r1
        ORRS     r0,r0,r7
        ASRS     r1,r1,#7
        ORRS     r0,r0,r1
        STRH     r0,[r4,#0xc]
        MOVS     r0,#0xa
        BL       SysTick_DelayMs
        BL       MCU_GpioPinInit
        BL       BSP_SPI_BLE_Init
        MOVS     r1,#0xc6
        MOVS     r0,#0xf9
        BL       SPI_1BYT_SetTx
        MOVS     r1,#0xc0
        MOVS     r0,#0x35
        BL       SPI_1BYT_SetTx
        MOVS     r1,#0xc0
        MOVS     r0,#0x28
        BL       SPI_1BYT_SetTx
        MOVS     r0,#0x19
        BL       SysTick_DelayMs
        MOVS     r1,#0x80
        MOVS     r0,#0x35
        BL       SPI_1BYT_SetTx
        MOVS     r0,#0xa
        BL       SysTick_DelayMs
        POP      {r3-r7,pc}
        ENDP

        DCW      0x0000
|L2.152|
        DCD      0x48000400

        AREA ||i.SPI_GPIO_Init||, CODE, READONLY, ALIGN=2

SPI_GPIO_Init PROC
        PUSH     {r3-r5,lr}
        MOVS     r1,#1
        LSLS     r0,r1,#18
        BL       RCC_AHBPeriphClockCmd
        MOV      r0,sp
        BL       GPIO_StructInit
        MOVS     r0,#0xf1
        LSLS     r0,r0,#8
        MOV      r1,sp
        STRH     r0,[r1,#0]
        MOVS     r0,#1
        STRB     r0,[r1,#2]
        MOVS     r0,#0x10
        LDR      r4,|L3.52|
        STRB     r0,[r1,#3]
        MOV      r0,r4
        BL       GPIO_Init
        MOV      r1,sp
        MOV      r0,r4
        BL       GPIO_Init
        POP      {r3-r5,pc}
        ENDP

        DCW      0x0000
|L3.52|
        DCD      0x48000400

        AREA ||i.delay_ms||, CODE, READONLY, ALIGN=2

delay_ms PROC
        PUSH     {r4,lr}
        MOV      r4,r0
        LDR      r0,|L4.32|
        LDR      r1,|L4.28|
        LDR      r0,[r0,#0]  ; SystemCoreClock
        BL       __aeabi_uidivmod
        MOVS     r1,#0x7d
        MULS     r0,r4,r0
        LSLS     r1,r1,#3
        MULS     r0,r1,r0
        BL       SysCtlDelay
        POP      {r4,pc}
        ENDP

|L4.28|
        DCD      0x003d0900
|L4.32|
        DCD      SystemCoreClock

        AREA ||i.delay_us||, CODE, READONLY, ALIGN=2

delay_us PROC
        PUSH     {r4,lr}
        MOV      r4,r0
        LDR      r0,|L5.28|
        LDR      r1,|L5.24|
        LDR      r0,[r0,#0]  ; SystemCoreClock
        BL       __aeabi_uidivmod
        MULS     r0,r4,r0
        BL       SysCtlDelay
        POP      {r4,pc}
        ENDP

        DCW      0x0000
|L5.24|
        DCD      0x003d0900
|L5.28|
        DCD      SystemCoreClock

        AREA ||i.main||, CODE, READONLY, ALIGN=2

        REQUIRE _printf_percent
        REQUIRE _printf_s
        REQUIRE _printf_str
        REQUIRE _printf_x
        REQUIRE _printf_longlong_hex
main PROC
        PUSH     {r3,lr}
        MOVS     r0,#0x7d
        LSLS     r0,r0,#3
        BL       SysTick_Init
        MOVS     r0,#0
        MOV      r3,r0
        MOVS     r1,#0xe1
        STR      r0,[sp,#0]
        MOVS     r2,#0x30
        LSLS     r1,r1,#9
        LDR      r0,|L6.80|
        BL       UARTx_Configure
        BL       RF_Open
        ADR      r2,|L6.84|
        ADR      r1,|L6.96|
        ADR      r0,|L6.108|
        BL       __2printf
        ADR      r0,|L6.152|
        BL       __2printf
        ADR      r0,|L6.176|
        BL       __2printf
        ADR      r0,|L6.152|
        BL       __2printf
        MOVS     r0,#0
        BL       SPI_1BYT_SetRx
        MOV      r1,r0
        ADR      r0,|L6.196|
        BL       __2printf
        BL       BleApp_Main
|L6.78|
        B        |L6.78|
        ENDP

|L6.80|
        DCD      0x40013800
|L6.84|
        DCB      "12:02:02",0
        DCB      0
        DCB      0
        DCB      0
|L6.96|
        DCB      "Aug 27 2020",0
|L6.108|
        DCB      "\r\nRafael_BLE_MM32 Demo run. Now is %s %s\r\n",0
        DCB      0
|L6.152|
        DCB      "-------------------\r\n",0
        DCB      0
        DCB      0
|L6.176|
        DCB      "  BLE Start.....\r\n",0
        DCB      0
|L6.196|
        DCB      "Chip_ID=0x%x\r\n",0
        DCB      0

        AREA ||i.spiGpioWriteReg||, CODE, READONLY, ALIGN=2

spiGpioWriteReg PROC
        PUSH     {r0,r1,r4-r7,lr}
        LDR      r6,|L7.236|
        MOVS     r1,#1
        LDRH     r0,[r6,#0xc]
        LSLS     r1,r1,#12
        ORRS     r0,r0,r1
        LSLS     r7,r1,#1
        BICS     r0,r0,r7
        SUB      sp,sp,#4
        BICS     r0,r0,r1
        STRH     r0,[r6,#0xc]
        MOVS     r0,#1
        BL       delay_us
        LDR      r0,[sp,#4]
        LSLS     r5,r0,#25
        LSRS     r5,r5,#25
        MOVS     r4,#0
|L7.36|
        LSLS     r0,r5,#24
        LDRH     r0,[r6,#0xc]
        BPL      |L7.50|
        MOVS     r1,#1
        LSLS     r1,r1,#15
        ORRS     r0,r0,r1
        B        |L7.54|
|L7.50|
        LSLS     r0,r0,#17
        LSRS     r0,r0,#17
|L7.54|
        STRH     r0,[r6,#0xc]
        MOVS     r0,#1
        BL       delay_us
        LDRH     r0,[r6,#0xc]
        ORRS     r0,r0,r7
        STRH     r0,[r6,#0xc]
        MOVS     r0,#1
        BL       delay_us
        LDRH     r0,[r6,#0xc]
        ADDS     r4,r4,#1
        BICS     r0,r0,r7
        STRH     r0,[r6,#0xc]
        LSLS     r0,r5,#25
        LSRS     r5,r0,#24
        UXTB     r4,r4
        CMP      r4,#8
        BCC      |L7.36|
        LDR      r0,[sp,#4]
        LSRS     r5,r0,#7
        MOVS     r4,#0
|L7.98|
        LSLS     r0,r5,#24
        LDRH     r0,[r6,#0xc]
        BPL      |L7.112|
        MOVS     r1,#1
        LSLS     r1,r1,#15
        ORRS     r0,r0,r1
        B        |L7.116|
|L7.112|
        LSLS     r0,r0,#17
        LSRS     r0,r0,#17
|L7.116|
        STRH     r0,[r6,#0xc]
        MOVS     r0,#1
        BL       delay_us
        LDRH     r0,[r6,#0xc]
        ORRS     r0,r0,r7
        STRH     r0,[r6,#0xc]
        MOVS     r0,#1
        BL       delay_us
        LDRH     r0,[r6,#0xc]
        ADDS     r4,r4,#1
        BICS     r0,r0,r7
        STRH     r0,[r6,#0xc]
        LSLS     r0,r5,#25
        LSRS     r5,r0,#24
        UXTB     r4,r4
        CMP      r4,#8
        BCC      |L7.98|
        LDR      r5,[sp,#8]
        MOVS     r4,#0
|L7.158|
        LSLS     r0,r5,#24
        LDRH     r0,[r6,#0xc]
        BPL      |L7.172|
        MOVS     r1,#1
        LSLS     r1,r1,#15
        ORRS     r0,r0,r1
        B        |L7.176|
|L7.172|
        LSLS     r0,r0,#17
        LSRS     r0,r0,#17
|L7.176|
        STRH     r0,[r6,#0xc]
        MOVS     r0,#1
        BL       delay_us
        LDRH     r0,[r6,#0xc]
        ORRS     r0,r0,r7
        STRH     r0,[r6,#0xc]
        MOVS     r0,#1
        BL       delay_us
        LDRH     r0,[r6,#0xc]
        ADDS     r4,r4,#1
        BICS     r0,r0,r7
        STRH     r0,[r6,#0xc]
        LSLS     r0,r5,#25
        LSRS     r5,r0,#24
        UXTB     r4,r4
        CMP      r4,#8
        BCC      |L7.158|
        MOVS     r0,#1
        BL       delay_us
        LDRH     r0,[r6,#0xc]
        MOVS     r1,#1
        LSLS     r1,r1,#12
        ORRS     r0,r0,r1
        LSLS     r0,r0,#17
        LSRS     r0,r0,#17
        STRH     r0,[r6,#0xc]
        POP      {r1-r7,pc}
        ENDP

|L7.236|
        DCD      0x48000400

        AREA ||.arm_vfe_header||, DATA, READONLY, NOALLOC, ALIGN=2

        DCD      0x00000000

        AREA ||.data||, DATA, ALIGN=0

HCI_SET_ADV_PARA
        DCB      0x01,0x06,0x20,0x0f
        DCB      0xa0,0x00,0xa0,0x00
        DCB      0x00,0x00,0x00,0x66
        DCB      0x55,0x44,0x33,0x22
        DCB      0x11,0x07,0x00
HCI_SET_ADV_DATA
        DCB      0x01
        DCB      0x08,0x20,0x0d,0x0c
        DCB      0x0b,0x02,0x01,0x05
        DCB      0x03,0x02,0x12,0x18
        DCB      0x03,0x19,0x40,0x03
HCI_SET_SCN_DATA
        DCB      0x01,0x09,0x20,0x0f
        DCB      0x0e,0x0d,0x09,0x52
        DCB      0x61,0x66,0x61,0x65
        DCB      0x6c,0x2d,0x37,0x32
        DCB      0x36,0x38,0x32

        AREA ||area_number.11||, DATA, ALIGN=0

        EXPORTAS ||area_number.11||, ||.data||
HCI_SET_ADV_EN
        DCB      0x01,0x0a,0x20,0x01
        DCB      0x01

;*** Start embedded assembler ***

#line 1 "..\\APP\\main.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___6_main_c_5c4fcab9____REV16|
#line 129 "..\\..\\..\\..\\3_Device\\CMSIS\\KEIL_CORE\\core_cmInstr.h"
|__asm___6_main_c_5c4fcab9____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___6_main_c_5c4fcab9____REVSH|
#line 144
|__asm___6_main_c_5c4fcab9____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.emb_text||, CODE
	THUMB
	EXPORT |SysCtlDelay|
#line 104 "..\\APP\\main.c"
|SysCtlDelay| PROC
#line 105

 subs r0, #1
 bne SysCtlDelay
 bx lr
	ENDP

;*** End   embedded assembler ***

__ARM_use_no_argv EQU 0

        EXPORT __ARM_use_no_argv
        EXPORT BleApp_Main [CODE]
        EXPORT RF_SpiIoMapping [CODE]
        EXPORT SPI_GPIO_Init [CODE]
        EXPORT delay_ms [CODE]
        EXPORT delay_us [CODE]
        EXPORT main [CODE]
        EXPORT spiGpioWriteReg [CODE]
        EXPORT HCI_SET_ADV_PARA [DATA,SIZE=19]
        EXPORT HCI_SET_ADV_DATA [DATA,SIZE=17]
        EXPORT HCI_SET_SCN_DATA [DATA,SIZE=19]
        EXPORT HCI_SET_ADV_EN [DATA,SIZE=5]

        IMPORT ||Lib$$Request$$armlib|| [CODE,WEAK]
        IMPORT __aeabi_uidivmod [CODE]
        IMPORT SystemCoreClock [DATA]
        IMPORT Knl_CodeCpy [CODE]
        IMPORT LL_Adv_Para [DATA]
        IMPORT Ch_ADV_Ch_Hop_Table [DATA]
        IMPORT LL_Msg_AdvScnConn [DATA]
        IMPORT RCC_AHBPeriphClockCmd [CODE]
        IMPORT GPIO_StructInit [CODE]
        IMPORT GPIO_Init [CODE]
        IMPORT SysTick_DelayMs [CODE]
        IMPORT MCU_GpioPinInit [CODE]
        IMPORT BSP_SPI_BLE_Init [CODE]
        IMPORT SPI_1BYT_SetTx [CODE]
        IMPORT SysTick_Init [CODE]
        IMPORT UARTx_Configure [CODE]
        IMPORT _printf_percent [CODE]
        IMPORT _printf_s [CODE]
        IMPORT _printf_str [CODE]
        IMPORT __2printf [CODE]
        IMPORT SPI_1BYT_SetRx [CODE]
        IMPORT _printf_x [CODE]
        IMPORT _printf_longlong_hex [CODE]
        IMPORT GPIO_SetBits [CODE]
        IMPORT GPIO_ResetBits [CODE]
        IMPORT RF_Init [CODE]

        KEEP RF_Open

        ATTR FILESCOPE
        ATTR SETVALUE Tag_ABI_PCS_wchar_t,2
        ATTR SETVALUE Tag_ABI_enum_size,1
        ATTR SETVALUE Tag_ABI_optimization_goals,3
        ATTR SETSTRING Tag_conformance,"2.09"
        ATTR SETVALUE AV,18,1

        ASSERT {ENDIAN} = "little"
        ASSERT {INTER} = {TRUE}
        ASSERT {ROPI} = {FALSE}
        ASSERT {RWPI} = {FALSE}
        ASSERT {IEEE_FULL} = {FALSE}
        ASSERT {IEEE_PART} = {FALSE}
        ASSERT {IEEE_JAVA} = {FALSE}
        END
